{"version":3,"sources":["./src/app/state/index.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/state/posts.actions.ts","./src/environments/environment.ts","./src/app/state/posts.reducer.ts","./src/app/post-item/post-item.component.html","./src/app/post-item/post-item.component.ts","./src/app/user-tab.enum.ts","./src/app/state/posts.selectors.ts","./src/app/state/post-detail.selectors.ts","./src/app/state/post-detail.actions.ts","./src/app/domain-only.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/from-now.pipe.ts","./src/app/comment/comment.component.html","./src/app/comment/comment.component.ts","./src/app/posts-list/posts-list.component.ts","./src/app/posts-list/posts-list.component.html","./src/app/app.module.ts","./src/app/post.service.ts","./src/app/navigation/navigation.component.html","./src/app/navigation/navigation.component.ts","./src/app/state/post-detail.reducer.ts","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/new-post/new-post.component.ts","./src/app/new-post/new-post.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/user.service.ts","./src/app/post-detail/post-detail.component.ts","./src/app/post-detail/post-detail.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEH;AACY;AAE/D,MAAM,QAAQ,GAA+B;IAClD,KAAK,EAAE,sDAAY;IACnB,WAAW,EAAE,4DAAkB;CAChC,CAAC;AAEK,MAAM,YAAY,GAA4B,CAAC,qEAAW,CAAC,UAAU;IAC1E,CAAC,CAAC,EAAE;IACJ,CAAC,CAAC,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,oEAAG;QAAA,0EAAe;QAAA,4DAAI;;;;;;;;;;;;;;ACGtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;;;;;ICarC,4EAKe;;;;IAHb,+EAAmB;;;IAFrB,qJAKe;;;IAJO,yFAAgB;;;IAOtC,8EAGiB;;;IADf,yEAAa;;;IAFf,0JAGiB;;;IAFE,sFAAa;;;IAxBpC,yEAAkB;IAChB,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IAEjC,yEAAwB;IACtB,uEAAkE;IAChE,kEACF;IAAA,4DAAI;IACJ,uEAAqE;IACnE,qEACF;IAAA,4DAAI;IACN,4DAAM;IAEN,gEAAM;IAEN,uIAOc;IACd,yIAKc;IAChB,4DAAM;;;IA3BA,0DAAwB;IAAxB,mGAAwB;IAGvB,0DAAuC;IAAvC,uHAAuC;IAGvC,0DAA0C;IAA1C,0HAA0C;IAOlC,0DAAiC;IAAjC,wGAAiC;IAQjC,0DAA8B;IAA9B,qGAA8B;;;IAS7C,sEAAK;IAAA,qEAAU;IAAA,4DAAM;;ADrBhB,MAAM,aAAa;IAIxB,YACU,KAAqB,EACrB,WAAwB;QADxB,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QAJlC,YAAO,GAAG,sDAAO,CAAC;IAKf,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,EAAE;QACJ,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,IAAI,GAAG;QACL,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;IAC1C,CAAC;IAEO,SAAS,CAAC,KAAU;QAC1B,OAAO,MAAM,CAAC,MAAM,CAAC,sDAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;;0EA9BU,aAAa;6FAAb,aAAa;QCX1B,0HA8Bc;QACd,qMAEc;;;QAjCD,0EAAa;;;;;;;;;;;;;;ACA1B;AAAA;AAAA;AAAA;AAAA;AAAkD;AAG3C,MAAM,SAAS,GAAG,gEAAY,CAAC,oBAAoB,CAAC,CAAC;AAErD,MAAM,gBAAgB,GAAG,gEAAY,CAC1C,4BAA4B,EAC5B,yDAAK,EAAoB,CAC1B,CAAC;AAEK,MAAM,gBAAgB,GAAG,gEAAY,CAC1C,4BAA4B,EAC5B,yDAAK,EAAoB,CAC1B,CAAC;;;;;;;;;;;;;ACbF;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAEgC;AAEzE,MAAM,cAAc,GAAG,OAAO,CAAC;AAQ/B,MAAM,YAAY,GAAU;IACjC,KAAK,EAAE,IAAI;IACX,SAAS,EAAE,KAAK;IAChB,KAAK,EAAE,EAAE;CACV,CAAC;AAEK,MAAM,OAAO,GAAG,iEAAa,CAClC,YAAY,EACZ,sDAAE,CAAC,wDAAS,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,iCACpB,KAAK,KACR,SAAS,EAAE,IAAI,IACf,CAAC,EACH,sDAAE,CAAC,+DAAgB,EAAE,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,iCACrC,KAAK,KACR,KAAK,EAAE,IAAI,EACX,SAAS,EAAE,KAAK,EAChB,KAAK,EAAE,IAAI,IACX,CAAC,EACH,sDAAE,CAAC,+DAAgB,EAAE,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,iCACtC,KAAK,KACR,KAAK,EAAE,KAAK,CAAC,OAAO,EACpB,SAAS,EAAE,KAAK,EAChB,KAAK,EAAE,EAAE,IACT,CAAC,CACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ICHE,uEAAuB;IACrB,wEAAyB;IAAA,uDAAgB;IAAA,4DAAI;IAC7C,4EAA8C;IAAA,uDAE5C;;IAAA,4DAAQ;IACZ,4DAAO;;;IAJF,0DAAqB;IAArB,yJAAqB;IAAC,0DAAgB;IAAhB,kFAAgB;IACK,0DAE5C;IAF4C,iJAE5C;;;IAEJ,wEAAuD;IAAA,uDAAgB;IAAA,4DAAI;;;IAAtD,iHAAiC;IAAC,0DAAgB;IAAhB,kFAAgB;;;;AC/BpE,MAAM,iBAAiB;IAG5B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;kFALR,iBAAiB;iGAAjB,iBAAiB;QDR9B,yEAAuB;QACrB,yEAAyC;QACvC,4EAOC;QACC,0EAA8B;QAAA,kEAAO;QAAA,4DAAO;QAC9C,4DAAS;QACT,yEAMC;QACC,uDACF;QAAA,4DAAM;QACN,4EAOC;QACC,0EAA8B;QAAA,oEAAS;QAAA,4DAAO;QAChD,4DAAS;QACX,4DAAM;QACN,0EAAgC;QAC9B,iHAKO;QACP,2GAA2E;QAC3E,0EAAgC;QAC9B,wDACA;;QAAA,yEAA0C;QAAC,wDAAwB;QAAA,4DAAI;QACzE,4DAAM;QACN,uEAAK;QACH,yEACG;QAAA,wDAAiC;QAAA,4DACnC;QACH,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA7CA,0DAGE;QAHF,8MAGE;QAMF,0DAGE;QAHF,8MAGE;QAEF,0DACF;QADE,2FACF;QAIE,0DAGE;QAHF,8MAGE;QAMG,0DAAc;QAAd,8EAAc;QAMjB,0DAAe;QAAf,+EAAe;QAEjB,0DACA;QADA,iLACA;QAAG,0DAAsC;QAAtC,mHAAsC;QAAE,0DAAwB;QAAxB,iGAAwB;QAG/B,0DAAiC;QAAjC,8GAAiC;QAClE,0DAAiC;QAAjC,yGAAiC;;;;;;;;;;;;;;AE9C1C;AAAA;AAAA,IAAY,OAGX;AAHD,WAAY,OAAO;IACjB,gCAAqB;IACrB,0BAAe;AACjB,CAAC,EAHW,OAAO,KAAP,OAAO,QAGlB;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAoE;AAIpE,MAAM,gBAAgB,GAAG,yEAAqB,CAAuB,OAAO,CAAC,CAAC;AAEvE,MAAM,WAAW,GAAG,kEAAc,CAAC,gBAAgB,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;;;;;;;;;;;;;ACN9E;AAAA;AAAA;AAAoE;AAKpE,MAAM,sBAAsB,GAAG,yEAAqB,CAGlD,aAAa,CAAC,CAAC;AAEV,MAAM,UAAU,GAAG,kEAAc,CAKtC,sBAAsB,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACfxD;AAAA;AAAA;AAAA;AAAA;AAAkD;AAG3C,MAAM,eAAe,GAAG,gEAAY,CACzC,+BAA+B,EAC/B,yDAAK,EAA8B,CACpC,CAAC;AAEK,MAAM,sBAAsB,GAAG,gEAAY,CAChD,uCAAuC,EACvC,yDAAK,EAAkD,CACxD,CAAC;AAEK,MAAM,sBAAsB,GAAG,gEAAY,CAChD,uCAAuC,EACvC,yDAAK,EAA4C,CAClD,CAAC;;;;;;;;;;;;;;;;;ACXK,MAAM,cAAc;IACzB,SAAS,CAAC,GAAW;QACnB,IAAI;YACF,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;SAC1B;QAAC,WAAM;YACN,OAAO,EAAE,CAAC;SACX;IACH,CAAC;;4EAPU,cAAc;8GAAd,cAAc;;;;;;;;;;;;;;;;;;;;;ACEpB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,sBAAsB,CAAC;KAChC;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,4EAAiC;QAEjC,yEAA2B;QACzB,2EAA+B;QACjC,4DAAM;;;;;;;;;;;;;;ACHN;AAAA;AAAA;AAAA;AAAA;AAAqD;;AAK9C,MAAM,WAAW;IACtB,SAAS,CAAC,IAAmB;QAC3B,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,OAAO,8DAAc,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAClE,CAAC;;sEAJU,WAAW;wGAAX,WAAW;;;;;;;;;;;;;;;;;;;;;;;;ICyChB,6EAKe;;;;IAHb,oFAAwB;;;IAH5B,0EAA+D;IAC7D,oIAKe;IACjB,4DAAM;;;IALuB,0DAAgB;IAAhB,yFAAgB;;;;;ACxC5C,MAAM,gBAAgB;IAS3B;QANS,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAAG,KAAK,CAAC;QAG5B,cAAS,GAAG,KAAK,CAAC;IAEH,CAAC;IAEhB,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAC1C,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,iBAAiB,KAAK,IAAI,CAAC,OAAO,CAAC,EAAE,CAC3D,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;;gFAnBU,gBAAgB;gGAAhB,gBAAgB;QDR7B,yEAA2E;QACzE,yEAA4C;QAC1C,4EASC;QACC,0EAA8B;QAAA,kEAAO;QAAA,4DAAO;QAC9C,4DAAS;QACT,oEAA+C;QAC/C,4EASC;QACC,0EAA8B;QAAA,oEAAS;QAAA,4DAAO;QAChD,4DAAS;QACX,4DAAM;QAEN,sEAAK;QACH,0EAAmC;QACjC,6EAA0E;QAA5B,yIAAS,qBAAiB,IAAC;QACvE,wDACF;QAAA,4DAAS;QACT,wEAA6C;QAAA,wDAE3C;QAAA,4DAAI;QACN,2EAAmC;QAAC,wDAA2B;QAAA,4DAAO;QACtE,wEAAM;QAAC,wDAAoC;;QAAA,4DAAO;QACpD,4DAAM;QACN,2EAGC;QACC,wEAAM;QAAA,wDAAkB;QAAA,4DAAO;QAE/B,+GAOM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAxDoB,yJAAgD;QAKpE,0DAKE;QALF,0NAKE;QAQF,0DAKE;QALF,0NAKE;QASA,0DACF;QADE,qGACF;QACG,0DAAyC;QAAzC,sHAAyC;QAAC,0DAE3C;QAF2C,0FAE3C;QACkC,0DAA2B;QAA3B,oGAA2B;QACxD,0DAAoC;QAApC,sKAAoC;QAI3C,0DAA6D;QAA7D,0JAA6D;QAEvD,0DAAkB;QAAlB,iFAAkB;QAEoB,0DAAiB;QAAjB,iFAAiB;kQCtCtD,gBAAgB;;;;;;;;;;;;;ACP7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACN;AACM;AAOZ;AACuB;;;;;;;ICXvD,sEAAkD;IAAA,qEAAU;IAAA,4DAAM;;;IAGhE,8EAGiB;;;IADf,yEAAa;;;IAFf,gJAGiB;;;;;IAFE,8LAA0B;;;IAK7C,sEAAK;IACH,uDACF;;IAAA,4DAAM;;;;IADJ,0DACF;IADE,+OACF;;ADOK,MAAM,kBAAkB;IAG7B,YACU,WAAwB,EACxB,KAAsB;QADtB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAiB;QAJhC,WAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,kEAAW,CAAC,CAAC,CAAC;IAK3C,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAEO,QAAQ;QACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,sEAAS,EAAE,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW;aACb,QAAQ,EAAE;aACV,IAAI,CACH,iEAAU,CAAC,CAAC,KAAU,EAAE,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,6EAAgB,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YACjD,OAAO,+CAAE,CAAC,SAAS,CAAC,CAAC;QACvB,CAAC,CAAC,CACH;aACA,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,6EAAgB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;aACxD;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;oFA3BU,kBAAkB;kGAAlB,kBAAkB;QClB/B,8GAAkE;;QAElE,8HAKc;;QACd,0MAIc;;;;;QAZR,uMAA0C;QAEnC,0DAAyC;QAAzC,mMAAyC;;;;;;;;;;;;;;ACDtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACF;AAEA;AACT;AACwB;AACzB;AAC0B;AACN;AACT;AACH;AACM;AACK;AACS;AACN;AAChB;AACW;AACrB;AACO;AACU;AACD;;;;AAiCnD,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,mBAHT,EAAE,YAZJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,wDAAW,CAAC,OAAO,CAAC,gDAAQ,EAAE;gBAC5B,kEAAY;aACb,CAAC;YACF,yEAAmB,CAAC,UAAU,CAAC;gBAC7B,MAAM,EAAE,EAAE;gBACV,OAAO,EAAE,sEAAW,CAAC,UAAU;aAChC,CAAC;SACH;oIAIU,SAAS,mBA7BlB,2DAAY;QACZ,mFAAkB;QAClB,0DAAW;QACX,oFAAmB;QACnB,8EAAiB;QACjB,qEAAc;QACd,kEAAa;QACb,yEAAe;QACf,8EAAgB;QAChB,uFAAmB;QACnB,iFAAiB;QACjB,iEAAc;QACd,4EAAgB,aAGhB,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;;;;;;;;;;;;;ACzCpB;AAAA;AAAA;AAAA;AAAA;AAA+D;AAEd;;;AAO1C,MAAM,WAAW;IAUtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QATpC,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,MAAM,EAAE,kBAAkB;gBAC1B,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QAEM,aAAQ,GAAG,2CAA2C,CAAC;IAExB,CAAC;IAExC,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAmB,IAAI,CAAC,QAAQ,CAAC;aACpC,IAAI,CAAC,0DAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,OAAO,CAAC,EAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC;IACzE,CAAC;;sEApBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;;;;ICLd,0EAAuD;IACrD,yEACA;IAAA,uEAAsC;IAAA,uDAAoB;IAAA,4DACzD;IAAA,6DACH;IAAA,4DAAO;IACP,uEAAiD;IAAA,iEAAM;IAAA,4DAAI;;;IAHtD,0DAAkC;IAAlC,iHAAkC;IAAC,0DAAoB;IAApB,qFAAoB;;;IAM5D,uEAA2C;IAAA,+DAAI;IAAA,4DAAI;IACnD,uEACG;IAAA,mEAAQ;IAAA,4DACV;IACD,uEAAgD;IAAA,gEAAK;IAAA,4DAAI;;ACPxD,MAAM,mBAAmB;IAG9B;QAFA,SAAI,GAAgB,IAAI,CAAC;IAEV,CAAC;IAEhB,QAAQ;QACN,2BAA2B;QAC3B,gBAAgB;QAChB,aAAa;QACb,2BAA2B;QAC3B,KAAK;IACP,CAAC;;sFAXU,mBAAmB;mGAAnB,mBAAmB;QDRhC,yEAAwB;QACtB,yEAAmC;QACjC,+HAOc;QACd,2MAMc;QAChB,4DAAM;QACR,4DAAM;;;QAhBW,0DAAa;QAAb,0EAAa;;;;;;;;;;;;;;AEF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAMjB;AAExB,MAAM,oBAAoB,GAAG,YAAY,CAAC;AAW1C,MAAM,YAAY,GAAU,EAAE,CAAC;AAE/B,MAAM,OAAO,GAAG,iEAAa,CAClC,YAAY,EACZ,sDAAE,CAAC,oEAAe,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,iCAClC,KAAK,KACR,CAAC,EAAE,CAAC,kCACC,KAAK,CAAC,EAAE,CAAC,KACZ,KAAK,EAAE,IAAI,EACX,SAAS,EAAE,IAAI,OAEjB,CAAC,EACH,sDAAE,CAAC,2EAAsB,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,iCAC/C,KAAK,KACR,CAAC,EAAE,CAAC,kCACC,KAAK,CAAC,EAAE,CAAC,KACZ,KAAK,EAAE,IAAI,EACX,SAAS,EAAE,KAAK,EAChB,KAAK,EAAE,IAAI,EACX,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CACpC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,iBAAiB,KAAK,IAAI,CAChD,OAEH,CAAC,EACH,sDAAE,CAAC,2EAAsB,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,iCAChD,KAAK,KACR,CAAC,EAAE,CAAC,kCACC,KAAK,CAAC,EAAE,CAAC,KACZ,KAAK,EAAE,KAAK,CAAC,OAAO,EACpB,SAAS,EAAE,KAAK,EAChB,KAAK,EAAE,SAAS,EAChB,gBAAgB,EAAE,EAAE,OAEtB,CAAC,CACJ,CAAC;;;;;;;;;;;;;;;;;AC9CK,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,oEAAG;QAAA,wEAAa;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;ACQb,MAAM,gBAAgB;IAC3B,YAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAAG,CAAC;IAE7C,QAAQ,KAAU,CAAC;IAEnB,IAAI,IAAI;QACN,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE;YACtC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;gFAXU,gBAAgB;gGAAhB,gBAAgB;QCR7B,oEAAG;QAAA,uDAAiC;QAAA,4DAAI;;QAArC,0DAAiC;QAAjC,yGAAiC;;;;;;;;;;;;;;ACCpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACE;AACG;AACK;AACS;AACH;AACL;AACZ;;;AAEtD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAkB,EAAE;IAC3C,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,6EAAgB,EAAE;IACxD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,sFAAmB,EAAE;IACrD,EAAE,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,kBAAkB,EAAE,SAAS,EAAE,MAAM,EAAE;IACxE,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,kEAAa,EAAE;IACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;CACnD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;AChBjB,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,oEAAG;QAAA,uEAAY;QAAA,4DAAI;;;;;;;;;;;;;;ACAnB;AAAA;AAAA;AAAA;AAAA;AAA+D;AAG1B;;;AAM9B,MAAM,WAAW;IAUtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QATpC,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,MAAM,EAAE,kBAAkB;gBAC1B,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QAEM,aAAQ,GAAG,2CAA2C,CAAC;IAExB,CAAC;IAExC,OAAO,CAAC,EAAU;QAChB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAyB,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC;aACrD,IAAI,CAAC,0DAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5C,CAAC;;sEAhBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AAClB;AACkB;AAON;AACsB;;;;;;;;;ICRxD,yEAAoE;IAClE,uDACF;;IAAA,4DAAM;;;;IADJ,0DACF;IADE,wOACF;;;IASA,4EAIe;;;;;;IAFb,+EAAmB;;;IAhBvB,yEAAyB;IACvB,8EAAgE;;IAEhE,6HAEM;;IAEN,yEAA4C;IAC1C,sEAAK;IACH,yEAAQ;IAAA,uDAAoD;;IAAA,4DAAS;IACrE,iEAAM;IACR,4DAAM;IACR,4DAAM;IAEN,+IAIe;;IACjB,4DAAM;;;;;;;IAlBW,0DAAgC;IAAhC,0LAAgC;IAEzC,0DAAkC;IAAlC,8NAAkC;IAM5B,0DAAoD;IAApD,wPAAoD;IAM1C,0DAAoC;IAApC,0MAAoC;;;IAO5D,sEAAK;IAAA,qEAAU;IAAA,4DAAM;;ADJhB,MAAM,mBAAmB;IAK9B,YACU,KAAqB,EACrB,WAAwB,EACxB,KAAsB;QAFtB,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAiB;QAPhC,UAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CACrB,0DAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,+EAAU,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CACtD,CAAC;IAMC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC;IAEO,OAAO,CAAC,EAAU;QACxB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kFAAe,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW;aACb,OAAO,CAAC,EAAE,CAAC;aACX,IAAI,CACH,iEAAU,CAAC,CAAC,KAAU,EAAE,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,yFAAsB,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YAC3D,OAAO,+CAAE,CAAC,SAAS,CAAC,CAAC;QACvB,CAAC,CAAC,CACH;aACA,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,yFAAsB,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aACtE;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAY,EAAE;QACZ,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACxD,CAAC;;sFAlCU,mBAAmB;mGAAnB,mBAAmB;QCnBhC,iIAqBc;;QACd,2MAEc;;;;QAxBD,uLAA+B;;;;;;;;;;;;;;;;;;;;ACAG;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { ActionReducerMap, MetaReducer } from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { AppState } from './AppState';\nimport { reducer as postsReducer } from './posts.reducer';\nimport { reducer as postDetailsReducer } from './post-detail.reducer';\n\nexport const reducers: ActionReducerMap<AppState> = {\n  posts: postsReducer,\n  postDetails: postDetailsReducer,\n};\n\nexport const metaReducers: MetaReducer<AppState>[] = !environment.production\n  ? []\n  : [];\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DetailedUser } from '../detailed-user';\nimport { UserTab } from '../user-tab.enum';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss'],\n})\nexport class UserComponent implements OnInit {\n  user: DetailedUser;\n  UserTab = UserTab;\n\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n  ) {}\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  getUser(): void {\n    this.userService.getUser(this.id).subscribe((user) => {\n      this.user = user;\n    });\n  }\n\n  get id(): number {\n    return Number(this.route.snapshot.paramMap.get('id'));\n  }\n\n  get tab(): UserTab | null {\n    const tab = this.route.snapshot.paramMap.get('tab');\n    return this.isUserTab(tab) ? tab : null;\n  }\n\n  private isUserTab(value: any): value is UserTab {\n    return Object.values(UserTab).includes(value);\n  }\n}\n","<ng-template [ngIf]=\"user\" [ngIfElse]=\"loading\">\n  <div class=\"user\">\n    <h1>User {{ user.username }}</h1>\n\n    <div class=\"user__tabs\">\n      <a routerLink=\"/users/{{ user.id }}/posts\" class=\"user__tab-item\">\n        Posts\n      </a>\n      <a routerLink=\"/users/{{ user.id }}/comments\" class=\"user__tab-item\">\n        Comments\n      </a>\n    </div>\n\n    <hr />\n\n    <ng-template [ngIf]=\"tab === UserTab.Comments\">\n      <app-comment\n        *ngFor=\"let comment of user.comments\"\n        [comment]=\"comment\"\n        [allComments]=\"user.comments\"\n        [hideNested]=\"true\"\n      ></app-comment>\n    </ng-template>\n    <ng-template [ngIf]=\"tab === UserTab.Posts\">\n      <app-post-item\n        *ngFor=\"let post of user.posts\"\n        [post]=\"post\"\n      ></app-post-item>\n    </ng-template>\n  </div>\n</ng-template>\n<ng-template #loading>\n  <div>Loading...</div>\n</ng-template>\n","import { createAction, props } from '@ngrx/store';\nimport { Post } from '../post';\n\nexport const loadPosts = createAction('[Posts] Load Posts');\n\nexport const loadPostsSuccess = createAction(\n  '[Posts] Load Posts Success',\n  props<{ data: Post[] }>(),\n);\n\nexport const loadPostsFailure = createAction(\n  '[Posts] Load Posts Failure',\n  props<{ error: Error }>(),\n);\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { createReducer, on } from '@ngrx/store';\nimport { Post } from '../post';\nimport { loadPosts, loadPostsFailure, loadPostsSuccess } from './posts.actions';\n\nexport const postFeatureKey = 'posts';\n\nexport interface State {\n  error: string | null;\n  isLoading: boolean;\n  posts: Post[];\n}\n\nexport const initialState: State = {\n  error: null,\n  isLoading: false,\n  posts: [],\n};\n\nexport const reducer = createReducer(\n  initialState,\n  on(loadPosts, (state) => ({\n    ...state,\n    isLoading: true,\n  })),\n  on(loadPostsSuccess, (state, { data }) => ({\n    ...state,\n    error: null,\n    isLoading: false,\n    posts: data,\n  })),\n  on(loadPostsFailure, (state, { error }) => ({\n    ...state,\n    error: error.message,\n    isLoading: false,\n    posts: [],\n  })),\n);\n","<div class=\"post-item\">\n  <div class=\"post-item__rating-container\">\n    <button\n      type=\"button\"\n      class=\"post-item__rating-vote-button post-item__rating-vote-button--up\"\n      [ngClass]=\"{\n        'post-item__rating-vote-button--vote-up': post.user_post_rating === 1,\n        'post-item__rating-vote-button--vote-down': post.user_post_rating === -1\n      }\"\n    >\n      <span class=\"visually-hidden\">Vote up</span>\n    </button>\n    <div\n      class=\"post-item__rating\"\n      [ngClass]=\"{\n        'post-item__rating--vote-up': post.user_post_rating === 1,\n        'post-item__rating--vote-down': post.user_post_rating === -1\n      }\"\n    >\n      {{ post.rating }}\n    </div>\n    <button\n      type=\"button\"\n      class=\"post-item__rating-vote-button post-item__rating-vote-button--down\"\n      [ngClass]=\"{\n        'post-item__rating-vote-button--vote-up': post.user_post_rating === 1,\n        'post-item__rating-vote-button--vote-down': post.user_post_rating === -1\n      }\"\n    >\n      <span class=\"visually-hidden\">Vote down</span>\n    </button>\n  </div>\n  <div class=\"post-item__content\">\n    <span *ngIf=\"post.url\">\n      <a href=\"{{ post.url }}\">{{ post.title }}</a>\n      <small class=\"post-item__external-url-domain\">{{\n        post.url | domainOnly\n      }}</small>\n    </span>\n    <a *ngIf=\"!post.url\" routerLink=\"/posts/{{ post.id }}\">{{ post.title }}</a>\n    <div class=\"post-item__details\">\n      Submitted {{ post.submitted_at | fromNow }} by\n      <a routerLink=\"/users/{{ post.user.id }}\"> {{ post.user.username }}</a>\n    </div>\n    <div>\n      <a class=\"post-item__comment-count\" routerLink=\"/posts/{{ post.id }}\"\n        >{{ post.comment_count }} comments</a\n      >\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-item',\n  templateUrl: './post-item.component.html',\n  styleUrls: ['./post-item.component.scss'],\n})\nexport class PostItemComponent implements OnInit {\n  @Input() post: Post;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","export enum UserTab {\n  Comments = 'comments',\n  Posts = 'posts',\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { AppState } from './AppState';\nimport { State as PostsState } from './posts.reducer';\n\nconst selectPostsState = createFeatureSelector<AppState, PostsState>('posts');\n\nexport const selectPosts = createSelector(selectPostsState, (state) => state);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DetailedPost } from '../detailed-post';\nimport { AppState } from './AppState';\nimport { State as PostDetailsState, PostState } from './post-detail.reducer';\n\nconst selectPostDetailsState = createFeatureSelector<\n  AppState,\n  PostDetailsState\n>('postDetails');\n\nexport const selectPost = createSelector<\n  AppState,\n  { id: DetailedPost['id'] },\n  PostDetailsState,\n  PostState\n>(selectPostDetailsState, (state, { id }) => state[id]);\n","import { createAction, props } from '@ngrx/store';\nimport { DetailedPost } from '../detailed-post';\n\nexport const loadPostDetails = createAction(\n  '[PostDetail] Load PostDetails',\n  props<{ id: DetailedPost['id'] }>(),\n);\n\nexport const loadPostDetailsSuccess = createAction(\n  '[PostDetail] Load PostDetails Success',\n  props<{ id: DetailedPost['id']; data: DetailedPost }>(),\n);\n\nexport const loadPostDetailsFailure = createAction(\n  '[PostDetail] Load PostDetails Failure',\n  props<{ id: DetailedPost['id']; error: Error }>(),\n);\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'domainOnly',\n})\nexport class DomainOnlyPipe implements PipeTransform {\n  transform(url: string): string {\n    try {\n      return new URL(url).host;\n    } catch {\n      return '';\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'reddit-clone-angular';\n}\n","<app-navigation></app-navigation>\n\n<div class=\"app-container\">\n  <router-outlet></router-outlet>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport formatDistance from 'date-fns/formatDistance';\n\n@Pipe({\n  name: 'fromNow',\n})\nexport class FromNowPipe implements PipeTransform {\n  transform(date: Date | string): string {\n    const now = new Date();\n    return formatDistance(new Date(date), now, { addSuffix: true });\n  }\n}\n","<div class=\"post-comment\" [ngClass]=\"{ 'post-comment--nested': isNested }\">\n  <div class=\"post-comment__rating-container\">\n    <button\n      type=\"button\"\n      class=\"post-comment__rating-vote-button post-comment__rating-vote-button--up\"\n      [ngClass]=\"{\n        'post-comment__rating-vote-button--vote-up':\n          comment.user_comment_rating === 1,\n        'post-comment__rating-vote-button--vote-down':\n          comment.user_comment_rating === -1\n      }\"\n    >\n      <span class=\"visually-hidden\">Vote up</span>\n    </button>\n    <div class=\"post-comment__rating-spacer\"></div>\n    <button\n      type=\"button\"\n      class=\"post-comment__rating-vote-button post-comment__rating-vote-button--down\"\n      [ngClass]=\"{\n        'post-comment__rating-vote-button--vote-up':\n          comment.user_comment_rating === 1,\n        'post-comment__rating-vote-button--vote-down':\n          comment.user_comment_rating === -1\n      }\"\n    >\n      <span class=\"visually-hidden\">Vote down</span>\n    </button>\n  </div>\n\n  <div>\n    <div class=\"post-comment__details\">\n      <button class=\"post-comment__collapse-button\" (click)=\"toggleCollapsed()\">\n        {{ collapsed ? '+' : '-' }}\n      </button>\n      <a routerLink=\"/users/{{ comment.user.id }}\">{{\n        comment.user.username\n      }}</a>\n      <span class=\"post-comment__points\"> {{ comment.rating }} points</span>\n      <span> {{ comment.submitted_at | fromNow }}</span>\n    </div>\n    <div\n      class=\"post-comment__content\"\n      [ngClass]=\"{ 'post-comment__content--collapsed': collapsed }\"\n    >\n      <span>{{ comment.text }}</span>\n\n      <div class=\"post-comment__nested-comments\" *ngIf=\"!hideNested\">\n        <app-comment\n          *ngFor=\"let childComment of childComments\"\n          [comment]=\"childComment\"\n          [allComments]=\"allComments\"\n          [isNested]=\"true\"\n        ></app-comment>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Comment } from '../comment';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss'],\n})\nexport class CommentComponent implements OnInit {\n  @Input() comment: Comment;\n  @Input() allComments: Comment[];\n  @Input() isNested = false;\n  @Input() hideNested = false;\n\n  childComments: Comment[];\n  collapsed = false;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.childComments = this.allComments.filter(\n      (comment) => comment.parent_comment_id === this.comment.id,\n    );\n  }\n\n  toggleCollapsed(): void {\n    this.collapsed = !this.collapsed;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { PostService } from '../post.service';\nimport { AppState } from '../state/AppState';\nimport {\n  loadPosts,\n  loadPostsFailure,\n  loadPostsSuccess,\n} from '../state/posts.actions';\nimport { selectPosts } from '../state/posts.selectors';\n\n@Component({\n  selector: 'app-posts-list',\n  templateUrl: './posts-list.component.html',\n  styleUrls: ['./posts-list.component.scss'],\n})\nexport class PostsListComponent implements OnInit {\n  posts$ = this.store.pipe(select(selectPosts));\n\n  constructor(\n    private postService: PostService,\n    private store: Store<AppState>,\n  ) {}\n\n  ngOnInit(): void {\n    this.getPosts();\n  }\n\n  private getPosts(): void {\n    this.store.dispatch(loadPosts());\n    this.postService\n      .getPosts()\n      .pipe(\n        catchError((error: any) => {\n          this.store.dispatch(loadPostsFailure({ error }));\n          return of(undefined);\n        }),\n      )\n      .subscribe((posts) => {\n        if (posts) {\n          this.store.dispatch(loadPostsSuccess({ data: posts }));\n        }\n      });\n  }\n}\n","<div *ngIf=\"(posts$ | async)?.isLoading === true\">Loading...</div>\n\n<ng-template [ngIf]=\"(posts$ | async)?.error === null\" [ngIfElse]=\"error\">\n  <app-post-item\n    *ngFor=\"let post of (posts$ | async)?.posts\"\n    [post]=\"post\"\n  ></app-post-item>\n</ng-template>\n<ng-template #error>\n  <div>\n    An error occurred while loading the data: {{ (posts$ | async)?.error }}\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PostsListComponent } from './posts-list/posts-list.component';\nimport { FromNowPipe } from './from-now.pipe';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserComponent } from './user/user.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { NewPostComponent } from './new-post/new-post.component';\nimport { PostDetailComponent } from './post-detail/post-detail.component';\nimport { PostItemComponent } from './post-item/post-item.component';\nimport { DomainOnlyPipe } from './domain-only.pipe';\nimport { CommentComponent } from './comment/comment.component';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './state';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostsListComponent,\n    FromNowPipe,\n    NavigationComponent,\n    RegisterComponent,\n    LoginComponent,\n    UserComponent,\n    LogoutComponent,\n    NewPostComponent,\n    PostDetailComponent,\n    PostItemComponent,\n    DomainOnlyPipe,\n    CommentComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n    }),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Post } from './post';\nimport { DetailedPost } from './detailed-post';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  httpOptions = {\n    headers: new HttpHeaders({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  private postsUrl = 'https://reddit-eu.herokuapp.com/api/posts';\n\n  constructor(private http: HttpClient) {}\n\n  getPosts(): Observable<Post[]> {\n    return this.http\n      .get<{ data: Post[] }>(this.postsUrl)\n      .pipe(map((response) => response.data));\n  }\n\n  getPost(id: number): Observable<{ data: DetailedPost }> {\n    return this.http.get<{ data: DetailedPost }>(`${this.postsUrl}/${id}`);\n  }\n}\n","<nav class=\"navigation\">\n  <div class=\"navigation__container\">\n    <ng-template [ngIf]=\"user\" [ngIfElse]=\"visitorBlock\">\n      <span class=\"navigation__item navigation__item--right\">\n        Logged in as\n        <a routerLink=\"/users/{{ user!.id }}\">{{ user!.username }}</a\n        >.\n      </span>\n      <a class=\"navigation__item\" routerLink=\"/logout\">Logout</a>\n    </ng-template>\n    <ng-template #visitorBlock>\n      <a class=\"navigation__item\" routerLink=\"/\">Home</a>\n      <a class=\"navigation__item navigation__item--right\" routerLink=\"/register\"\n        >Register</a\n      >\n      <a class=\"navigation__item\" routerLink=\"/login\">Login</a>\n    </ng-template>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit {\n  user: User | null = null;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // TODO: get real user data\n    // this.user = {\n    //   id: 123,\n    //   username: 'Some user',\n    // };\n  }\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { DetailedPost } from '../detailed-post';\nimport {\n  loadPostDetails,\n  loadPostDetailsFailure,\n  loadPostDetailsSuccess,\n} from './post-detail.actions';\n\nexport const postDetailFeatureKey = 'postDetail';\n\nexport type State = Record<DetailedPost['id'], PostState>;\n\nexport interface PostState {\n  error: string | null;\n  isLoading: boolean;\n  topLevelComments: DetailedPost['comments'];\n  value: DetailedPost | undefined;\n}\n\nexport const initialState: State = {};\n\nexport const reducer = createReducer(\n  initialState,\n  on(loadPostDetails, (state, { id }) => ({\n    ...state,\n    [id]: {\n      ...state[id],\n      error: null,\n      isLoading: true,\n    },\n  })),\n  on(loadPostDetailsSuccess, (state, { id, data }) => ({\n    ...state,\n    [id]: {\n      ...state[id],\n      error: null,\n      isLoading: false,\n      value: data,\n      topLevelComments: data.comments.filter(\n        (comment) => comment.parent_comment_id === null,\n      ),\n    },\n  })),\n  on(loadPostDetailsFailure, (state, { id, error }) => ({\n    ...state,\n    [id]: {\n      ...state[id],\n      error: error.message,\n      isLoading: false,\n      value: undefined,\n      topLevelComments: [],\n    },\n  })),\n);\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>logout works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-new-post',\n  templateUrl: './new-post.component.html',\n  styleUrls: ['./new-post.component.scss'],\n})\nexport class NewPostComponent implements OnInit {\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {}\n\n  get type(): 'link' | 'text' | null {\n    const type = this.route.snapshot.paramMap.get('type');\n    if (type === 'link' || type === 'text') {\n      return type;\n    }\n    return null;\n  }\n}\n","<p>new-post works! type = {{ type }}</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { NewPostComponent } from './new-post/new-post.component';\nimport { PostDetailComponent } from './post-detail/post-detail.component';\nimport { PostsListComponent } from './posts-list/posts-list.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserComponent } from './user/user.component';\n\nconst routes: Routes = [\n  { path: '', component: PostsListComponent },\n  { path: 'posts/new/:type', component: NewPostComponent },\n  { path: 'posts/:id', component: PostDetailComponent },\n  { path: 'users/:id', redirectTo: '/users/:id/posts', pathMatch: 'full' },\n  { path: 'users/:id/:tab', component: UserComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DetailedUser } from './detailed-user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  httpOptions = {\n    headers: new HttpHeaders({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  private usersUrl = 'https://reddit-eu.herokuapp.com/api/users';\n\n  constructor(private http: HttpClient) {}\n\n  getUser(id: number): Observable<DetailedUser> {\n    return this.http\n      .get<{ data: DetailedUser }>(`${this.usersUrl}/${id}`)\n      .pipe(map((response) => response.data));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { PostService } from '../post.service';\nimport { AppState } from '../state/AppState';\nimport {\n  loadPostDetails,\n  loadPostDetailsFailure,\n  loadPostDetailsSuccess,\n} from '../state/post-detail.actions';\nimport { selectPost } from '../state/post-detail.selectors';\n\n@Component({\n  selector: 'app-post-detail',\n  templateUrl: './post-detail.component.html',\n  styleUrls: ['./post-detail.component.scss'],\n})\nexport class PostDetailComponent implements OnInit {\n  post$ = this.store.pipe(\n    select((state) => selectPost(state, { id: this.id })),\n  );\n\n  constructor(\n    private route: ActivatedRoute,\n    private postService: PostService,\n    private store: Store<AppState>,\n  ) {}\n\n  ngOnInit(): void {\n    this.getPost(this.id);\n  }\n\n  private getPost(id: number): void {\n    this.store.dispatch(loadPostDetails({ id }));\n    this.postService\n      .getPost(id)\n      .pipe(\n        catchError((error: any) => {\n          this.store.dispatch(loadPostDetailsFailure({ id, error }));\n          return of(undefined);\n        }),\n      )\n      .subscribe((post) => {\n        if (post) {\n          this.store.dispatch(loadPostDetailsSuccess({ id, data: post.data }));\n        }\n      });\n  }\n\n  private get id(): number {\n    return Number(this.route.snapshot.paramMap.get('id'));\n  }\n}\n","<ng-template [ngIf]=\"(post$ | async)?.value\" [ngIfElse]=\"loading\">\n  <div class=\"post-detail\">\n    <app-post-item [post]=\"(post$ | async)?.value!\"></app-post-item>\n\n    <div *ngIf=\"(post$ | async)?.value?.text\" class=\"post-detail__text\">\n      {{ (post$ | async)?.value?.text }}\n    </div>\n\n    <div class=\"post-detail__content-container\">\n      <div>\n        <strong>{{ (post$ | async)?.value?.comment_count }} comments</strong>\n        <hr />\n      </div>\n    </div>\n\n    <app-comment\n      *ngFor=\"let comment of (post$ | async)?.topLevelComments\"\n      [comment]=\"comment\"\n      [allComments]=\"(post$ | async)?.value?.comments!\"\n    ></app-comment>\n  </div>\n</ng-template>\n<ng-template #loading>\n  <div>Loading...</div>\n</ng-template>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}